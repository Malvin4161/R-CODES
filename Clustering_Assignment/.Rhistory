colnames(Promotion)<-c("Credit","Promotion.Type","InterestRateWaiver","StandardPromotion")
# Changing column names
View(Promotion)
Promotion<-read_excel("F:\\Study\\DATA_SCIENCE\\Hypothesis_Testing\\Datasets\\Promotion.xlsx")    # Promotion.xlsx
View(Promotion)
View(Promotion)
library(readxl)
Bahaman<-read_excel("F:\\Study\\DATA_SCIENCE\\Hypothesis_Testing\\Datasets\\Bahaman.xlsx") # Bahaman.xlsx
View(Bahaman)
View(Bahaman)
View(Bahaman)
View(Bahaman)
t2 <- prop.table(table(Defective))
t2
attach(Ordrs)
View(Ordrs)
View(Ordrs)
chisq.test(table(Phillippines,Indonesia,Malta,India))
chisq.test(table(Phillippines,Indonesia,Malta,India))
?chisq.test
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
View(Buyers)
View(Buyers)
#*************************************************************************
#Ques 5 Fantaloons Sales managers commented that % of males versus females walking in to the store differ based on day of the week. Analyze the data and determine whether there is evidence at 5 % significance level to support this hypothesis.
fanta<-read.csv("F:\\Study\\DATA_SCIENCE\\Hypothesis_Testing\\Datasets\\Faltoons.csv")
#*************************************************************************
#Ques 5 Fantaloons Sales managers commented that % of males versus females walking in to the store differ based on day of the week. Analyze the data and determine whether there is evidence at 5 % significance level to support this hypothesis.
fanta<-read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\Faltoons.csv")
View(fanta)
View(fanta)
Johnytalkers<-read_excel("F:\\Study\\DATA_SCIENCE\\Hypothesis_Testing\\Datasets\\JohnyTalkers.xlsx")   # JohnyTalkers.xlsx
View(Johnytalkers)
View(Johnytalkers)
table1 <- table(Drinks,Person)
attach(Johnytalkers)
table1 <- table(Drinks,Person)
table1
attach(fanta)
View(fanta)
View(fanta)
table1 <- table(Weekdays,Weekend)
table1
Johnytalkers<-read_excel("F:\\Study\\DATA_SCIENCE\\Hypothesis_Testing\\Datasets\\JohnyTalkers.xlsx")   # JohnyTalkers.xlsx
attach(Johnytalkers)
table1 <- table(Drinks,Person)
table1
#*************************************************************************
#Ques 5 Fantaloons Sales managers commented that % of males versus females walking in to the store differ based on day of the week. Analyze the data and determine whether there is evidence at 5 % significance level to support this hypothesis.
fanta<-read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\Faltoons.csv")
attach(fanta)
table1 <- table(Weekdays,Weekend)
table1
prop.test(x=c(66,47),n=c(233,167),conf.level = 0.95,correct = FALSE,alternative = "two.sided")
prop.test(x=c(66,47),n=c(233,167),conf.level = 0.95,correct = FALSE,alternative = "less")
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
View(Buyers)
View(Buyers)
#Importing required data
BuyerRatio <- read.csv("BuyerRatio.csv")
#Importing required data
BuyerRatio <- read.csv("F:\\Study\\DATA_SCIENCE\\PROJECT_DEMOS\\Assignments_ExcelR_Solutions-master\\Hypothesis testing Assignments\\BuyerRatio.csv")
chisq.test(BuyerRatio[,2:5])
chisq.test(t(BuyerRatio[,2:5]))
#buyers ratio
#the dependent and independent variables are discrete
#chi-square test
a <- read.csv(file.choose())
Buyers2<-Buyers[,-1]
View(Buyers2)
View(Buyers2)
attach(Buyers)
chisq.test(Buyers2)
View(Buyers2)
View(Buyers2)
?chisq
?chisq.test
x <- c(A = 20, B = 15, C = 25)
x
chisq.test(x)
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
Buyers2<-Buyers[,-1]
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
View(Buyers)
View(Buyers)
data1<-c(1,2,3,4)
chisq.test(data1)
data1<-c(40,25,19,37,39)
chisq.test(data1)
data2<-c(35,31,38,27,29)
chisq.test(data2)
chisq.test(Buyers2)
##***********************************************************************
##Ques 3 Sales of products in four different regions is tabulated for males and females. Find if male-female buyer rations are similar across regions.
Buyers<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\BuyerRatio.csv")
Buyers2<-Buyers[,-1]
attach(Buyers)
chisq.test(Buyers2)
##****************************************************************************
##Ques 4 TeleCall uses 4 centers around the globe to process customer order forms. They audit a certain %  of the customer order forms. Any error in order form renders it defective and has to be reworked before processing.  The manager wants to check whether the defective %  varies by centre. Please analyze the data at 5% significance level and help the manager draw appropriate inferences
Orders<-read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\Costomer+OrderForm.csv")
attach(Ordrs)
chisq.test(table(Phillippines,Indonesia,Malta,India))
##****************************************************************************
##Ques 4 TeleCall uses 4 centers around the globe to process customer order forms. They audit a certain %  of the customer order forms. Any error in order form renders it defective and has to be reworked before processing.  The manager wants to check whether the defective %  varies by centre. Please analyze the data at 5% significance level and help the manager draw appropriate inferences
Orders<-read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\Costomer+OrderForm.csv")
View(Orders)
View(Orders)
# Importing the data set:
CostomerOrderForm = read.csv("Costomer+OrderForm.csv")
# Importing the data set:
CostomerOrderForm = read.csv("F:\\Study\\DATA_SCIENCE\\PROJECT_DEMOS\\Assignments_ExcelR_Solutions-master\\Hypothesis testing Assignments\\Costomer+OrderForm.csv")
View(CostomerOrderForm)
View(CostomerOrderForm)
attach(CostomerOrderForm)
df = as.data.frame(cbind(c(Phillippines,Indonesia,Malta,India),rep(c("Phillippines","Indonesia","Malta","India"),c(300,300,300,300))))
View(df)
View(df)
colnames(df) = c("Type","Location")
head(df)
df_tab1 = table(df$Type,df$Location)
cof<-read_excel(file.choose()) # customer_order(unstacked).xlsx
View(Orders)
View(Orders)
##****************************************************************************
##Ques 4 TeleCall uses 4 centers around the globe to process customer order forms. They audit a certain %  of the customer order forms. Any error in order form renders it defective and has to be reworked before processing.  The manager wants to check whether the defective %  varies by centre. Please analyze the data at 5% significance level and help the manager draw appropriate inferences
Orders<-read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Hypothesis_Testing\\Costomer+OrderForm.csv")
View(Orders)
View(Orders)
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01","2013-09-23","2014-11-15","2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
View(emp.data)
View(emp.data)
View(Orders)
View(Orders)
View(Orders)
View(Orders)
View(Orders)
View(Orders)
View(Orders)
View(Orders)
orders.data<- data.frame(
Country=c(Phillippines,Indonesia,Malta,India),
ErrorType=c(ErrorFree, Defective)
)
attach(Orders)
orders.data<- data.frame(
Country=c(Phillippines,Indonesia,Malta,India),
ErrorType=c(300,300,300,300)
)
View(orders.data)
View(orders.data)
orders.data<- data.frame(cbind(Phillippines,Indonesia,Malta,India),rbind(300,300,300,300)
)
View(orders.data)
View(orders.data)
col1=cbind(Phillippines,Indonesia,Malta
,India)
col1
row=rbind(Phillippines,Indonesia,Malta
,India)
row
col1=rbind(Phillippines,Indonesia,Malta
,India)
col1
col1=rbind(Phillippines,Indonesia,Malta
,India
col1=rbind(Phillippines,Indonesia,Malta
,India)
col1=rbind(Phillippines,Indonesia,Malta,India)
col1
View(col1)
View(col1)
install.packages("Rserve")
library(Rserve)
Rserve
Rserve()
##1Whether the client has subscribed a term deposit or not Binomial ("yes" or "no")
Bank_Data<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Logistic_Regression\\bank-full.csv")
View(Bank_Data)
View(Bank_Data)
getwd()
setwd("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Logistic_Regression")
View(Bank_Data)
str(Bank_Data)
attach(Bank_Data)
##EDA
plot(y,age)
plot(y,job)
plot(y,married)
plot(y,marital)
##EDA
plot(y,age)
plot(y,job)
boxplot(y,job)
boxplot(y)
hist(y,marital)
hist(y,as.factor(marital))
hist(y,default)
hist(y,balance)
plot(y,balance)
plot(y,day)
plot(y, duration)
plot(y, campaign)
boxplot((Bank_Data
))
boxplot(Bank_Data)
hist(y,age)
hist(y)
hist(y, balance)
_
str(Bank_Data)
plot(y, job)
plot(y,marital)
plot(y,education)
plot(y,default)
plot(y,housing)
plot(y,loan)
plt(y, month)
plot(y, month)
plt(y,pdays)
plot(y,pdays)
plot(y,previous)
plot(y,poutcome)
##****************************************************************************
## 2.Classify whether application accepted or not using Logistic regression
creditApp<- read.csv("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Logistic_Regression\\creditcard.csv")
View(creditApp)
App<- creditApp[,-c(1)]  ## removing column 1 as its nt required
View(App)
##EDA
plot(card, reports)
attach(App)
plot(card, reports)
plot(card, age)
plot(card, income)
plot(card, share)
plot(card, expenditure)
plot(card, owner)
plot(card,selfemp)
plot(card, dependents)
plot(card, months)
plot(card, majorcards)
plot(card, active)
boxplot(App)
boxplot(App)
summary(App)
str(App)
##Perform clustering (Both hierarchical and K means clustering) for the airlines data to obtain optimum number of clusters.
getwd()
setwd("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment")
library("readxl")
airlines<- read_xlsx("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment\\EastWestAirlines.xlsx", sheet = 2)
View(airlines)
summary(airlines)
str(airlines)
plot(Award, Balance)
attach(airlines)
plot(Award, Balance)
plot(Award?, Balance)
plot(Award?, Balance)
plot(Award?,Balance)
plot(Award?)
plot(Balance)
plot(Id,Balance)
plot(ID# ,Balance)
plot(Balance)
##Perform clustering (Both hierarchical and K means clustering) for the airlines data to obtain optimum number of clusters.
getwd()
setwd("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment")
library("readxl")
airlines<- read_xlsx("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment\\EastWestAirlines.xlsx", sheet = 2)
View(airlines)
summary(airlines)
str(airlines)
attach(airlines)
plot(airlines$`ID#`)
plot(airlines$`ID#`, Balance)
plot(airlines$`ID#`, Qual_mines)
plot(airlines$`ID#`, airlines$Balance)
plot(airlines$`ID#`, airlines$Qual_mines)
plot(airlines$`ID#`, airlines$Qual_mines)
plot(airlines$`ID#`, airlines$Qual_miles)
plot(airlines$`ID#`, )$out
plot(airlines$`ID#`, airlines$Balance)$out
plot(airlines$`ID#`, airlines$cc1_miles )
plot(airlines$`ID#`, airlines$Bonus_miles)
plot(airlines$`ID#`, airlines$Bonus_trans)
plot(airlines$`ID#`,airlines$Days_since_enroll)
plot(airlines$`ID#`, airlines$Flight_miles_12mo)
summary(airlines)
str(airlines)
##creating the normalize function
normalize<-function(x){
return ( (x-min(x))/(max(x)-min(x)))
}
## normalizing the airlins data
?lapply
normalized_data<- as.data.frame(lapply( airlines,normalize))
summary(normalized_data)
d<- dist(normalized_data, method = "euclidean")
fit<- hclust(d, method = "complete")
plot(fit)
groups<- cutree(fit, k=3)
rect.hclust(fit, k=2,border = "red")
rect.hclust(fit, k=3,border = "red")
types<-as.matrix(groups)
final<- data.frame(airlines, types)
View(final)
kfit<- kmeans(normalized_data,4)
str(kfit)
table1<-data.frame(airlines, kfit$cluster)
table2<- table1[,c(ncol(table1),1:(ncol(table1)-1))]
View(table2)
aggregate(airlines[,-c(1,2)], by=list(kfit$cluster), FUN=mean)
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 2, var))
twss = c()
for (i in 1:8) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:8, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:16) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:16, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
wss
for (i in 1:2164) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
for (i in 1:13) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:13, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
library(caret)
preproc<- preProcess(airlines)
View(preproc)
View(preproc)
summary(preproc)
airlinesNorm<- predict(preproc,airlines)
summary(airlines)
##creating the normalize function
normalize<-function(x){
return ( (x-min(x))/(max(x)-min(x)))
}
normalized_data<- as.data.frame(lapply( airlines,normalize))
summary(normalized_data)
d<- dist(normalized_data, method = "euclidean")
fit<- hclust(d, method = "ward.D")
plot(fit)
groups<- cutree(fit, k=5)
rect.hclust(fit, k=5,border = "red")
types<-as.matrix(groups)
final<- data.frame(airlines, types)
View(final)
aggregate(airlines, by=list(final$types), FUN=mean)
aggregate(airlines[,-c(2)], by=list(final$types), FUN=mean)
aggregate(airlines[,-c(1)], by=list(final$types), FUN=mean)
clusters<-aggregate(airlines[,-c(1)], by=list(final$types), FUN=mean)
View(Clu)
View(clusters)
tapply(airlines$Balance, clusters, mean)
tapply(airlines$Balance, clusters, mean)
?tapply
airlines<- data.frame(airlines)
tapply(airlines$Balance, clusters, mean)
tapply(airlines$Balance, clusters, mean)
length(clusters)
clusters<-aggregate(airlines, by=list(final$types), FUN=mean)
View(clusters)
tapply(airlines$Balance, clusters, mean)
kfit<- kmeans(normalized_data,4)
str(kfit)
table1<-data.frame(airlines, kfit$cluster)
table2<- table1[,c(ncol(table1),1:(ncol(table1)-1))]
View(table2)
aggregate(airlines[,-c(1,2)], by=list(kfit$cluster), FUN=mean)
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 2, var))
twss = c()
for (i in 1:8) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:13, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(1:8, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:12) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:12, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
fit<- hclust(d, method = "centroid")
plot(fit)
groups<- cutree(fit, k=5)
rect.hclust(fit, k=5,border = "red")
types<-as.matrix(groups)
final<- data.frame(airlines, types)
View(final)
clusters<-aggregate(airlines, by=list(final$types), FUN=mean)
View(clusters)
kfit<- kmeans(normalized_data,4)
str(kfit)
table1<-data.frame(airlines, kfit$cluster)
table2<- table1[,c(ncol(table1),1:(ncol(table1)-1))]
View(table2)
aggregate(airlines[,-c(1,2)], by=list(kfit$cluster), FUN=mean)
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 2, var))
wss = (nrow(normalized_data))*sum(apply(normalized_data, 2, var))
wss
twss = c()
for (i in 1:12) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:12, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
# kmeans by screee plot
?apply
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 10, var))
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 2, var))
wss
twss = c()
for (i in 1:8) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:8, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:13) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:13, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(1, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(13, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(32, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(132, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:15) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(132, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:32) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(32, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(1:32, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
plot(1::32, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
normalized_data <- scale(mydata[,3:13])
normalized_data <- scale(airlines[,3:13])
# Load the data set
input = read.csv("F:\\Study\\DATA_SCIENCE\\Data_Science_Sessions_Vinod\\Universities.csv")
# Load the data set
input = read.csv("F:\\Study\\DATA_SCIENCE\\Data_Science_Sessions_Vinod\\Universities.csv")
summary(input)
View(input)
View(airlines)
##Perform clustering (Both hierarchical and K means clustering) for the airlines data to obtain optimum number of clusters.
getwd()
setwd("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment")
library("readxl")
airlines<- read_xlsx("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment\\EastWestAirlines.xlsx", sheet = 2)
View(airlines)
attach(airlines)
##creating the normalize function
normalize<-function(x){
return ( (x-min(x))/(max(x)-min(x)))
}
## normalizing the airlins data
normalized_data<-as.data.frame(lapply(input[,2:11],normalize))
## normalizing the airlins data
normalized_data<-as.data.frame(lapply(input[,2:12],normalize))
## normalizing the airlins data
normalized_data<-as.data.frame(lapply(airlines[,2:12],normalize))
summary(normalized_data)
normalized_data <- scale(airlines[,2:12]) #excluding the university name columnbefore normalizing
summary(normalized_data)
d<- dist(normalized_data, method = "euclidean")
fit<- hclust(d, method = "centroid")
plot(fit)
groups<- cutree(fit, k=5)
rect.hclust(fit, k=5,border = "red")
types<-as.matrix(groups)
final<- data.frame(airlines, types)
View(final)
clusters<-aggregate(airlines, by=list(final$types), FUN=mean)
View(clusters)
fit<- hclust(d, method = "complete")
plot(fit)
##Perform clustering (Both hierarchical and K means clustering) for the airlines data to obtain optimum number of clusters.
getwd()
setwd("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment")
library("readxl")
airlines<- read_xlsx("F:\\Study\\DATA_SCIENCE\\Assignment_Mtrl\\Clustering_Assignment\\EastWestAirlines.xlsx", sheet = 2)
View(airlines)
attach(airlines)
##creating the normalize function
normalize<-function(x){
return ( (x-min(x))/(max(x)-min(x)))
}
## normalizing the airlins data
normalized_data<-as.data.frame(lapply(airlines[,2:12],normalize))
summary(normalized_data)
normalized_data <- scale(airlines[,2:12]) #excluding the university name columnbefore normalizing
summary(normalized_data)
d<- dist(normalized_data, method = "euclidean")
fit<- hclust(d, method = "complete")
plot(fit)
groups<- cutree(fit, k=5)
rect.hclust(fit, k=5,border = "red")
types<-as.matrix(groups)
final<- data.frame(airlines, types)
View(final)
clusters<-aggregate(airlines, by=list(final$types), FUN=mean)
View(clusters)
kfit<- kmeans(normalized_data,4)
str(kfit)
table1<-data.frame(airlines, kfit$cluster)
table2<- table1[,c(ncol(table1),1:(ncol(table1)-1))]
View(table2)
aggregate(airlines[,-c(1,2)], by=list(kfit$cluster), FUN=mean)
wss = (nrow(normalized_data)-1)*sum(apply(normalized_data, 2, var))
twss = c()
for (i in 1:32) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:32, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
for (i in 1:8) twss[i] = sum(kmeans(normalized_data, centers=i)$withinss)
plot(1:8, wss, type="b", xlab="Number of Clusters", ylab="total Within groups sum of squares")   # Look for an "elbow" in the scree plot #
